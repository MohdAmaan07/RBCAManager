# Generated by Django 5.1.3 on 2024-11-27 15:37

from django.db import migrations

def create_groups_and_permissions(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    admin_permissions = [
        'Can add log entry', 'Can change log entry', 'Can delete log entry', 'Can view log entry',
        'Can add group', 'Can change group', 'Can delete group', 'Can view group',
        'Can add permission', 'Can change permission', 'Can delete permission', 'Can view permission',
        'Can add user', 'Can change user', 'Can delete user', 'Can view user',
        'Can add roles', 'Can change roles', 'Can delete roles', 'Can view roles',
        'Can add access attempt', 'Can change access attempt', 'Can delete access attempt', 'Can view access attempt',
        'Can add access failure', 'Can change access failure', 'Can delete access failure', 'Can view access failure',
        'Can add access log', 'Can change access log', 'Can delete access log', 'Can view access log',
        'Can add session', 'Can change session', 'Can delete session', 'Can view session'
    ]

    moderator_permissions = [
        'Can view log entry', 'Can view group', 'Can view permission', 'Can view user',
        'Can view roles','Can add access attempt', 'Can change access attempt', 'Can delete access attempt', 
        'Can view access attempt','Can add access failure', 'Can change access failure', 'Can delete access failure', 
        'Can view access failure', 'Can add access log', 'Can change access log', 'Can delete access log', 
        'Can view access log', 'Can add session', 'Can change session', 'Can delete session', 'Can view session'
    ]


    admin_group, _ = Group.objects.get_or_create(name='admin')
    moderator_group, _ = Group.objects.get_or_create(name='moderator')
    user_group, _ = Group.objects.get_or_create(name='user')

    for perm_name in admin_permissions:
        permission = Permission.objects.get(name=perm_name)
        admin_group.permissions.add(permission)

    for perm_name in moderator_permissions:
        permission = Permission.objects.get(name=perm_name)
        moderator_group.permissions.add(permission)

def forwards(apps, schema_editor):
    create_groups_and_permissions(apps, schema_editor)




class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0002_delete_roles'),
    ]

    operations = [
    ]
